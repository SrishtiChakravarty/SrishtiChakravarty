#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left,*right;
    
    Node(int val){
        data=val;
        left=NULL;
        right=NULL;
        
    }
};




Node* constructbst(int preorder[],int* preorderindex,int key,int min, int max, int n){
    if(*preorderindex>=n){
        return NULL;
    }
    
    Node* root=NULL;
    if(key<min && key>max){
       root=new Node(key); 
      *preorderindex=*preorderindex+1;
      
      if(*preorderindex<n){
          root->left=constructbst(preorder,preorderindex,preorder[*preorderindex],min,key,n);
      }
      if(*preorderindex<n){
          root->right=constructbst(preorder,preorderindex,preorder[*preorderindex],key,max,n);
      }
      
    }
    
    return root;
}
void printpreoder(Node* root){
    if(root==NULL){
        return ;
    }
    
    cout<<root->data<<" ";
    printpreoder(root->left);
    
    printpreoder(root->right);
    
}



int main() {
	int preorder[]={10,2,1,13,11};
	int n=5;
	int preorderindex=0;
	Node* root=constructbst(preorder,&preorderindex,preorder[0],INT_MIN,INT_MAX,n);
	printpreoder(root);
	return 0;
}
