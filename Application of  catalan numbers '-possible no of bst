#include <iostream>

#include <bits/stdc++.h>
using namespace std;


struct Node{
    int data;
    Node* left;
    Node* right;
    
    Node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
};




std::vector<Node*>  constructtress( int start , int end){
    std::vector<Node*> trees;
    
    if(start>end){
        trees.push_back(NULL);
        return trees;
    }
 
      for(int i=start;i<=end;i++){
        std::vector<Node*> leftt=constructtress(start,i-1);
        std::vector<Node*> rightt=constructtress(i+1,end);
        
        for(int j=0;j<leftt.size();j++){
            Node* l=leftt[j];
            for(int k=0;k<rightt.size();j++){
                Node* r=rightt[k];
                Node* node=new Node(i);
                node->left=leftt;
                node->right=rightt;
                trees.push_back(node)
                
            }
            
        }
    }
    return tress;
}



void preorder(Node* root){
     if(root==NULL){
         return;
     }
     
     cout<<root->data<<" ";
     preorder(root->left);
     preorder(root->right);
     
     
 }

int main() {
 
  
std::vector<Node*> totaltress=constructtress(1,3);

for(int i=0;i<totaltress.size();i++){
    cout<<(i+1)<<":";
    preorder(totaltress(i));
    cout<<endl;
}
}
