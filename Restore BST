#include <iostream>
#include <climits>
#include <bits/stdc++.h>

using namespace std;


struct Node{
    int data;
    Node* left;
    Node* right;
    
    Node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
};

void swap(int *a,int *b){
    int temp=*a;
    *a=*b;
    *b=temp;
    
}

void calcpointers(Node* root,Node** first, Node** mid,Node** last, Node** prev){
    if(root==NULL){
        return;
    }
    calcpointers(root->left,first,mid,last,prev);
    
    if(*prev && root->data < (*prev)->data){
        if(!*first){
            *first=*prev;
            *mid=root;
        }
        else{
            *last=root;
            
        }
        *prev=root;
        calcpointers(root->right,first,mid,last,prev);
    }
    
}


void restorebst(Node* root){
    Node* first,*mid,*last,*prev;
    first=NULL;
    mid=NULL;
    prev=NULL;
    last=NULL;
    
    calcpointers(root,&first,&mid,&last,&prev);
    
    if(first && last){
        swap(first->data,last->data);
    }
    else if(first && mid){
        swap(first->data,mid->data);
    }
}







void inorder(Node* root){
     if(root==NULL){
         return;
     }
     
     
     inorder(root->left);
      cout<<root->data<<" ";
  inorder(root->right);
     
     
 }

int main() {

Node* root=new Node(6);
root->left=new Node(9);
root->right=new Node(3);
root->left->left=new Node(1);
root->left->left=new Node(4);
root->right->right=new Node(13);

inorder(root);
cout<<endl;

restorebst(root);
inorder(root);
cout<<endl;
return 0;
}
