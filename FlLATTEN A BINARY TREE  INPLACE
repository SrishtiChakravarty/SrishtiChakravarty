#include <iostream>
#include <bits/stdc++.h>

using namespace std;

struct Node{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int val){
        data= val;
        left=NULL;
        right=NULL;
    }
};


void flattenbtree(Node* root){
    
    if(root==NULL || root->left==NULL || root->left==NULL){
        return;
    }
    
    
    if(root->left!=NULL){
        flattenbtree(root->left);
        
        Node* temp=root->right;
        root->right=root->left;
        
        root->left=NULL;
        
    
      Node* t=root->right ;
      while(root->right!=NULL){
          t=t->right;
          
      }
        t->right  =temp;
      }
      
      flattenbtree(root->right);
    }
    


void inorderprint(Node* root){
    
    if(root==NULL){
        return;
    
    }
    

    inorderprint(root->left);
    cout<<root->data;
    inorderprint(root->right);
    
}


int main() {
	struct Node* root = new Node(1);
	root->left=new Node(2);
	root->right=new Node(3);
	root->left->left=new Node(4);
	root->left->right=new Node(5);
	root->right->left= new Node(6);
	root->right->right=new Node(7);
	
	flattenbtree(root);
	inorderprint(root);
	cout<<endl;
	return 0;
}
