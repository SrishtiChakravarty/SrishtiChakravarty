#include <algorithm>
#include <string>
#include <bits/stdc++.h>
#include <vector>


using namespace std;

// #define int long long 
#define vi vector<int>
#define pii pair<int,int>
#define vii vector<pii>
#define rep(i,a,b)  for(i=a;i<b;i++)
#define ff first
#define ss second
#define setBits(x) buildin_popcount(x)



priority_queue<int,vi,greater<int>> pqmin;
priority_queue<int,vi> pqmax;


void insert(int x){
    
    if(pqmin.size()==pqmax.size()){
        if(pqmax.size()==0){
            pqmax.push(x);
            return;
        }
        
        if(x<pqmax.top()){
            pqmax.push(x);
        }
        else{
            pqmin.push(x);
        }
    }
    else{
        
        if(pqmax.size()<pqmin.size()){
            if(x>=pqmax.top()){
                pqmin.top(x);
                
            }
            else{
                int temp=pqmax.top();
                pqmax.pop();
                pqmin.push(temp);
                pqmax.push(x);
                
            }
            else{
                if(x<pqmin.top()){
                    pqmax.push(x);
                }
                else{
                    
                    int temp=pqmin.top();
                    pqmin.pop();
                    pqmax.push(temp);
                    pqmin.push(x);
                    }
            }
        }
        
        
        
        
        
        
    }
}



 double findmedian(){
     if(pqmin.size()==pqmax.size()){
         return (pqmin.top()+pqmax.top())/2.0;
         
     }
     else if(pqmax.top()>pqmin.top()){
         return pqmax.top();
     }
     else{
         return pqmin.top();
     }
 }

signed main(){
   
   insert(10);
   std::cout <<findmedian()<< std::endl;
   
   
   
    return 0;
}
