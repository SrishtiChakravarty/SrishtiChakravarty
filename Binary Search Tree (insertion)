normal binary tree tc=0(n)
b search tree Tc=0(log n)
inorder traversal of bst give sorted order


#include <iostream>
#include <vector>
#include <bits/stdc++.h>

using namespace std;

struct Node{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int val){
        data= val;
        left=NULL;
        right=NULL;
    }
};


Node* Bst(Node* root, int val){
    
    if(root==NULL){
        return new Node(val);
    }
    
    if(val<root->data){
        root->left=Bst(root->left, val);
        
    }
    else{
        root->right=Bst(root->right,val);
    }
    return root;
}

void inorder(Node* root){
    
    if(root==NULL){
        return;
    }
    
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}



int main() {
	 Node* root = NULL;
	 root=Bst(root,5);
	 Bst(root,1);
	 Bst(root,4);
	 Bst(root,3);
	 Bst(root,2);
	 
	 
	inorder(root);

   
   
   

	return 0;
}
