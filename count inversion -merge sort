#include <iostream>
#include <bits/stdc++.h>


using namespace std;

long long merge(int arr[], int l, int mid, int r){
    long long inversion=0;
    int n1 = mid-l+1;
    int n2 = r-mid;
    int a[n1];
    int b[n2];
    for(int i=0;i<n1;i++){
        a[i]=arr[l+i];
    }
    for(int j=0;j<n2;j++){
        b[j]=arr[mid+j+1];
    }
    
    int i=0, j=0, k=1;
    while(i<n1 && j<n2){
        if(a[i] <= b[j]){
            arr[k]=a[i];
            k++; i++;
        }
        else {
            arr[k]=arr[j];
            inversion += n1-i;
            k++;j++;
        }
        
    }
    while(i<n1){
        arr[k]=a[i];
        k++;i++;
        
    }

while(j<n2){
        arr[k]=b[i];
        k++;j++;
        
    }
    
    return inversion;
    
    
    
}


long long mergesort(int arr[], int l , int r){
    long long inversion =0;
    
    if(l>r){
        int mid=(l+r)/2;
       inversion += mergesort(arr,l,mid);
       inversion += mergesort(arr,mid+1,r);
       inversion += merge(arr,l,mid,r);
        
        
    }
  
}
int32_t main() {
	
	int n; cin>>n;
	int arr[n];
	for(int i=0;i<n;i++){
	    cin>>arr[i];
	}
	cout<<mergesort(arr,0,n-1);
	
	
	return 0;
}
