TC =O(n)
#include <iostream>
#include <stack>
#include <bits/stdc++.h>
using namespace std;


struct Node{
    int data;
    Node* left;
    Node* right;
    
    Node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
};


void zigzagtraveral(Node* root){
    
    if(root==NULL){
        return;
    }
    
    std::stack<Node*> curr;
    std::stack<Node*> next;
    
    bool lefttoright=true;
    
    curr.push(root);
    
    while(!curr.empty()){
        Node* temp=curr.top();
        curr.pop();
        
        if(temp){
            cout<<temp->data<<" ";
        
        if(lefttoright){
            if(temp->left){
                next.push(temp->left);
            }
            
            
            if(temp->right){
                next.push(temp->right);
            
        }
        
    }
    //right to left
    else{
        if(temp->right){
                next.push(temp->right);
            
        }
        
        if(temp->left){
                next.push(temp->left);
            }
            
    }
    
 }
 
  
  if(curr.empty()){
      lefttoright=!lefttoright;
      swap(curr,next);
  }
 
 
    }
    
    
}


void preorder(Node* root){
     if(root==NULL){
         return;
     }
     
     cout<<root->data<<" ";
     preorder(root->left);
     preorder(root->right);
     
     
 }

int main() {
 
Node* root=new Node(12);
root->left=new Node(9);
root->right=new Node(15);
root->left->left=new Node(5);
root->left->right=new Node(10);
zigzagtraveral(root);
cout<<endl;
return 0;
}
