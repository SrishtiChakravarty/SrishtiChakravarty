#include <iostream>
using namespace std;

class node{
    public:
    int data;
    node* next;
    
    node(int value){
        data=value;
        next=NULL;
    }
};

void insertattail(node* &head,int value){
    node *n = new node(value);
    
    if(head==NULL){
        head=n;
        return;
    }
    
    node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
        
    }
    temp->next=n;
    
}

void display(node* head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
        
    }cout<<endl;
}

int main() {
	node* head=NULL;
	insertattail(head,1);
	insertattail(head,2);
	insertattail(head,3);
	display(head);
	return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------------
Insert At Head 

#include <iostream>
using namespace std;

class node{
    public:
    int data;
    node* next;
    
    node(int value){
        data=value;
        next=NULL;
    }
};

void insertathead(node* &head,int value){
    node *n=new node(value);
    n->next=head;
    head=n;
    
}

void insertattail(node* &head,int value){
    node *n = new node(value);
    
    if(head==NULL){
        head=n;
        return;
    }
    
    node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
        
    }
    temp->next=n;
    
}

void display(node* head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
        
    }cout<<endl;
}

int main() {
	node* head=NULL;
	insertattail(head,1);
	insertattail(head,2);
	insertattail(head,3);
	display(head);

	insertathead(head,4);
	display(head);
		return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------------
searching 
#include <iostream>
using namespace std;

class node{
    public:
    int data;
    node* next;
    
    node(int value){
        data=value;
        next=NULL;
    }
};

void insertathead(node* &head,int value){
    node *n=new node(value);
    n->next=head;
    head=n;
    
}

void insertattail(node* &head,int value){
    node *n = new node(value);
    
    if(head==NULL){
        head=n;
        return;
    }
    
    node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
        
    }
    temp->next=n;
    
}

void display(node* head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
        
    }cout<<endl;
}

bool seach(node* head,int key){
    node* temp=head;
    while(temp!=NULL){
        if(temp->data==key){
            return true;
        }
        temp=temp->next;
        
    }
    return false;
}



int main() {
	node* head=NULL;
	insertattail(head,1);
	insertattail(head,2);
	insertattail(head,3);
	display(head);

	insertathead(head,4);
	display(head);
	cout<<seach(head,5)<<endl;
	cout<<seach(head,3)<<endl;
		return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------------
